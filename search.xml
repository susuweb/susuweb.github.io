<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>随记</title>
      <link href="2021/03/05/sui-ji/"/>
      <url>2021/03/05/sui-ji/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wmyskxz/img/img/96%E5%B9%B4-%E7%A6%BB%E8%81%8C8%E4%B8%AA%E6%9C%88-%E6%8B%92%E7%BB%9D%E5%8D%8E%E4%B8%BAoffer-%E7%9B%AE%E5%89%8D%E8%87%AA%E7%94%B1%E8%81%8C%E4%B8%9A-%E8%AE%B0%E8%BF%99%E5%A4%A7%E5%8D%8A%E5%B9%B4%E6%9D%A5%E7%9A%84%E6%8C%A3%E6%89%8E%E4%B8%8E%E8%BF%B7%E8%8C%AB/7896890-4afe4c026538ad39.png" alt="avatar"><br>仅以此文，记录自己毕业近两年来的挣扎与迷茫。</p><h1 id="2019-07-11"><a href="#2019-07-11" class="headerlink" title="2019.07.11"></a>2019.07.11</h1><p>从学校毕业之后，两个人，怀揣梦想，眼里带光，来到深圳这个充满机会的地方，一切的一切也从这个时候开始……<br>2019年7月11日晚上一个从厦门到深圳，一个从沈阳到深圳，最终在深圳宝安国际机场相聚。见面时男孩偷偷地看着女孩，他经常这样偷偷地看着女孩，但是，好像…每次男孩这么看着女孩的时候女孩都不会注意到有人正偷偷地看着自己。女孩眼中带着一丝不易察觉的坚定被男孩收入眼中（她是一个特别要强的女孩子，心里极度渴望成为一名女强人）男孩拉着女孩的行李箱打车前往酒店暂住一晚（男孩是提前到达的深圳先安排好了一切等女孩晚上过来），等待第二天的入职。</p><h1 id="2019-07-12"><a href="#2019-07-12" class="headerlink" title="2019.07.12"></a>2019.07.12</h1><p>第二天一早，俩人下楼找了一家南方特色的早餐店，吃着标配的豆浆油条，女孩说，深圳的早餐一点儿都比不上沈阳的。在深圳炎热的夏天中，女孩似乎没有一年前那对厦门的炎热夏天的厌恶心情，反倒是带着期待的神色，两箱大行李，女孩也没让男孩帮忙拿，就自己那么拖着，一步一步的走去地铁，转了公交，到了公司门口。这大公司就是不一样，入职有专人专车接送，有人专门指路，一切的一切都是那么的井井有条，来到大堂经过了一系列的入职手续，终于要随车前往宿舍，男孩在C区，女孩在A区，距离不远也不近，走路差不多7、8分钟的样子。食堂有饭卡，从每个月工资里面扣，饭菜说不上好也说不上坏，总之一切的一切好像都那么的平平淡淡，没有惊喜，没有意外，当然也没有令人特别开心，女孩回到宿舍就跟男孩吐槽宿舍环境太差，这不好那不好，可男孩心里觉得，也就那样吧，总之不好，也不坏。但是这异乡的第一晚，注定难眠…</p><h1 id="2019-7"><a href="#2019-7" class="headerlink" title="2019.7"></a>2019.7</h1><p>接着就是将近一个月的入职培训。炎热的夏天好像几乎都会伴随着令人心烦的事情，入职培训其实就是为期21天的军训，真的是煎熬，早上礼堂听课，下午操场军训，这特么的那里是上班…男孩女孩每天一起吃早饭上下班，开始的一段时间还好，后来慢慢地每天男孩不知道为什么天天惹女孩子生气，女孩就不愿意跟男孩上下班，也就晚上会一起吃个饭，其他时候基本上不会在一起。培训期间还有很多兴趣比赛，唱歌写字跳舞啥的，男孩女孩都参加了，虽然最后没有拿到名次，但是两个人的关系也因此得到了缓解。等到最后一天军训终于来了的时候，身边所有的人皮肤颜色都比来时候差了不止八个度，这一天，我们即将离开公司总部，前往自己以后一直工作的地方。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql个人笔记</title>
      <link href="2020/06/29/mysql-ge-ren-bi-ji/"/>
      <url>2020/06/29/mysql-ge-ren-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的基本操作"><a href="#数据库的基本操作" class="headerlink" title="数据库的基本操作"></a>数据库的基本操作</h2><p>创建数据库：</p><pre><code>create database company;</code></pre><p>选择创建表的数据库：</p><pre><code>USE company;</code></pre><p>创建数据表：</p><pre><code>create table offices(officeCode INT(10) NOT NULL UNIQUE,#INT类型，非空约束，唯一性city VARCHAR(50) NOT NULL,#字符串类型，非空约束address VARCHAR(50) NOT NULL,#字符串类型，非空约束country VARCHAR(50) NOT NULL,#字符串类型，非空约束postalCode VARCHAR(15) NOT NULL,#字符串类型，非空约束PRIMARY KEY (officeCode)#设置officeCode为表的主键);</code></pre><p>查看数据库中的表：</p><pre><code>show tables;+-------------------+| Tables_in_company |+-------------------+| offices    |+-------------------+1 row in set (0.06 sec)</code></pre><p>创建表<code>employees</code>:</p><pre><code>create table employees(employeeNumber INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,#整型，非空约束，主键，自增lastName VARCHAR(50) NOT NULL,firstName VARCHAR(50) NOT NULL,mobile VARCHAR(25) NOT NULL,officeCode INT(10) NOT NULL,jobTitle VARCHAR(50) NOT NULL,birth DATETIME,note VARCHAR(255),sex VARCHAR(5),CONSTRAINT office_fk FOREIGN KEY(officeCode) REFERENCES offices(officeCode)#在表employees中的officeCode字段添加名称为office_fk的外键约束，关联company中的主键officeCode);</code></pre><p>将表<code>employees</code>的<code>mobile</code>字段修改到<code>officeCode</code>字段后,修改字段位置需要用到<code>ALTER TABLE</code>语句：<br>:</p><pre><code>ALTER TABLE employees MODIFY mobile VARCHAR(25) AFTER officeCode;</code></pre><p>将表<code>employees</code>的字段名改为<code>employee_birth</code>,修改表中的字段名需要用到<code>ALTER TABLE</code>语句：</p><pre><code>ALTER TABLE employees CHANGE birth employee_birth DATATIME;</code></pre><p>修改表的数据类型：用<code>ALTER TABLE</code>语句修改<code>sex</code>字段，数据类型为<code>CHAR(1)</code>,非空约束。</p><pre><code>ALTER TABLE employees MODIFY sex CHAR(1) NOT NULL;</code></pre><p>删除字段：</p><pre><code>ALTER TABLE employees DROP note;</code></pre><p>增加字段：</p><pre><code>ALTER TABLE employees ADD favorite_activity VARCHAR(100);</code></pre><p>删除表：</p><blockquote><p>由于表<code>offices</code>关联了外键，所以要删除父表时需要先删除子表的外键约束，才能删除父表！<br>删除关联的外键：</p></blockquote><pre><code>ALTER TABLE employees DROP FOREIGN KEY office_fk;</code></pre><p>删除父表：</p><pre><code>DROP TABLE offices;</code></pre><p>修改表的存储引擎：</p><pre><code>ALTER TABLE employees ENGINE = MyISAM;</code></pre><p>修改表名：</p><pre><code>ALTER TABLE employees RENAME employees_info;</code></pre><blockquote><p>Happy ending<del>~</del></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库的基本操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Hexo+Github搭建个人博客（2）</title>
      <link href="2020/06/25/yong-hexo-github-da-jian-ge-ren-bo-ke-2/"/>
      <url>2020/06/25/yong-hexo-github-da-jian-ge-ren-bo-ke-2/</url>
      
        <content type="html"><![CDATA[<h1 id="0x01-HEXO配置"><a href="#0x01-HEXO配置" class="headerlink" title="0x01. HEXO配置"></a>0x01. HEXO配置</h1><p>博客目录结构：</p><pre><code>- node_modules - public - scaffolds - source - _data - _posts - about - archives - categories - friends - tags - themes</code></pre><p><code>node_modules</code>是<code>node.js</code>各种库的目录，<code>public</code>是生成的网页文件目录，<code>scaffolds</code>里面就三个文件，存储着新文章和新页面的初始设置，<code>source</code>里面存放着文章、各类页面、图像等文件，<code>themes</code>存放着主题文件。</p><p>文件根目录下_config.yml文件就是整个hexo框架的配置文件了，详细配置描述看官网：<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">配置</a></p><h2 id="0x01-1-SITE："><a href="#0x01-1-SITE：" class="headerlink" title="0x01-1. SITE："></a>0x01-1. SITE：</h2><p>参数：<br><br><code>title</code>: 网站标题<br><code>subtitle</code>: 网站副标题<br><code>description</code>: 网站描述<br><code>author</code>: 网站作者<br><code>language</code>: 网站使用的语言<br><code>timezone</code>: 网站使用的时区</p><h2 id="0x01-2-URL"><a href="#0x01-2-URL" class="headerlink" title="0x01-2. URL:"></a>0x01-2. URL:</h2><p>url: 你的网站域名<br>root: /<br>permalink: 生成某个文章时候的连接格式<code>:year/:month/:day/:title/</code></p><h1 id="0x02-主题"><a href="#0x02-主题" class="headerlink" title="0x02. 主题"></a>0x02. 主题</h1><p>主题文件放在<code>themes</code>文件下，我用的主题：<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a></p><h2 id="0x02-1-新建文章模板修改"><a href="#0x02-1-新建文章模板修改" class="headerlink" title="0x02-1. 新建文章模板修改"></a>0x02-1. 新建文章模板修改</h2><p>为了新建文章不需要自己添加参数，可以在<code>/scaffolds/post.md</code>中修改以下代码：</p><pre><code>--- title: {{ title }} date: {{ date }} author: img: coverImg: top: false cover: false toc: true mathjax: false password: summary: tags: categories: ---</code></pre><p>注意：每个冒号后面必须要加一个空格，否则无法识别。</p><h2 id="0x02-2-categories页面、tags页面、about页面、contact页面、friends页面添加："><a href="#0x02-2-categories页面、tags页面、about页面、contact页面、friends页面添加：" class="headerlink" title="0x02-2. categories页面、tags页面、about页面、contact页面、friends页面添加："></a>0x02-2. categories页面、tags页面、about页面、contact页面、friends页面添加：</h2><p><code>categories</code>页面（显示所有类别）、<code>tags</code>页面（显示所有标签）、<code>about</code>页面（显示我的博客和我自己的信息）、<code>contact</code>页面（用于显示联系信息）、<code>friends</code>页面（是用于显示友好链接信息的页面）</p><p>在<code>Git bash</code>中<code>cd</code>进入<code>blog</code>文件夹，输入以下代码：</p><pre><code>hexo new page "categories"</code></pre><p>编辑<code>/source/categories/index.md</code>中的文件：</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: "categories"layout: "categories"---</code></pre><p><code>tags</code>页面、<code>about</code>页面、<code>contact</code>页面、<code>friends</code>页面跟上面一样添加。<br>注意：<code>friends</code>页面需要在<code>source</code>目录下新建一个<code>_data</code>目录，并在<code>_data</code>目录中添加一个<code>friends.json</code>文件，该文件内容如下：</p><pre><code>[{    "avatar": "http://image.luokangyuan.com/1_qq_27922023.jpg",    "name": "MaJang",    "introduction": "I am not a master, just looking for the master's footsteps.",    "url": "http://luokangyuan.com/",    "title": "Read More"}, {    "avatar": "http://image.luokangyuan.com/4027734.jpeg",    "name": "Blinkfox",    "introduction": "Hello, I'm blinkfox, I like programming.",    "url": "https://blinkfox.github.io/",    "title": "Visit Blog"}, {    "avatar": "http://image.luokangyuan.com/avatar.jpg",    "name": "ja_rome",    "introduction": "Ordinary steps can also go out of the great journey.",    "url": "https://me.csdn.net/jlh912008548",    "title": "Read More"}]</code></pre><h2 id="0x02-3-代码高亮："><a href="#0x02-3-代码高亮：" class="headerlink" title="0x02-3. 代码高亮："></a>0x02-3. 代码高亮：</h2><p><code>Hexo</code>主题使用<code>Hexo</code>的插件<code>hexo-prism-plugin</code>而不是其自己的主题来显示代码高亮。安装命令如下：</p><pre><code>cnpm i -S hexo-prism-plugin</code></pre><p>然后修改主题<code>themes/hexo-theme-mate</code>目录下的<code>_config.yml</code>文件中的<code>highlight.enable</code>的值为<code>true</code>：</p><pre><code>highlight:   enable: trueprism_plugin:  mode: 'preprocess'    # realtime/preprocess  theme: 'tomorrow'  line_number: false    # default false  custom_css:</code></pre><h2 id="0x02-4-发布字数统计插件"><a href="#0x02-4-发布字数统计插件" class="headerlink" title="0x02-4. 发布字数统计插件"></a>0x02-4. 发布字数统计插件</h2><p>安装命令如下：</p><pre><code>cnpm i --save hexo-wordcount</code></pre><p>然后激活主题文件夹中<code>_config.yml</code>文件的以下配置项：</p><pre><code>postInfo:  date: true  update: false  wordCount: false # set true.  totalCount: false # set true.  min2read: false # set true.  readCount: false # set true.</code></pre><h2 id="0x02-5-添加RSS支持"><a href="#0x02-5-添加RSS支持" class="headerlink" title="0x02-5. 添加RSS支持"></a>0x02-5. 添加RSS支持</h2><p>使用<code>hexo-generator-feed</code>插件支持RSS，安装命令如下：</p><pre><code>npm install hexo-generator-feed --save</code></pre><p>然后在主题目录下的<code>_config.yml</code>文件中添加如下代码：</p><pre><code>feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: ' '  order_by: -date</code></pre><p>执行<code>hexo clean&amp;hexo g</code>重新生成博客文件，然后就可以在<code>pubic</code>文件夹中看到的<code>atom.xml</code>文件表明已经成功安装。</p><h2 id="0x02-6-修改社交链接"><a href="#0x02-6-修改社交链接" class="headerlink" title="0x02-6. 修改社交链接"></a>0x02-6. 修改社交链接</h2><p>在主题<code>_config.yml</code>文件配置<code>QQ</code>，<code>Github</code>以及邮箱和更改默认支持。在主题文件夹中<code>/layout/_partial/</code>social-link.ejs文件中，可以根据需要添加或修改社交链接地址。要添加链接，参考以下代码：</p><pre><code>&lt;% if (theme.socialLink.github) { %&gt;    &lt;a href="&lt;%= theme.socialLink.github %&gt;" class="tooltipped" target="_blank" data-tooltip="访问我的GitHub" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-github"&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;</code></pre><p>可以在<a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a>中搜索图标使用，常见的社交软件图标：</p><blockquote><p>Facebook: fab fa-facebook<br>Twitter: fab fa-twitter<br>Google-plus: fab fa-google-plus<br>Linkedin: fab fa-linkedin<br>Tumblr: fab fa-tumblr<br>Medium: fab fa-medium<br>Slack: fab fa-slack<br>Sina Weibo: fab fa-weibo<br>Wechat: fab fa-weixin<br>QQ: fab fa-qq<br>Zhihu: fab fa-zhihu</p></blockquote><h2 id="0x02-07-配置音乐播放器"><a href="#0x02-07-配置音乐播放器" class="headerlink" title="0x02-07. 配置音乐播放器"></a>0x02-07. 配置音乐播放器</h2><p>配置激活themes文件夹下_config.yml文件即可：</p><pre><code># Whether to display the musicsmusic:  enable: true  title:            # non-fixed mode works    enable: true    show: Listen to music  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    # require song, playlist, album, search, artist  id: 503838841     # require song id / playlist id / album id / search keyword  fixed: false      # enable fixed mode  autoplay: false   # audio atuoplay  theme: '#42b983'  loop: 'all'       # player loop play, values: 'all', 'one', 'none'  order: 'random'   # player play order, values: 'list', 'random'  preload: 'auto'   # values: 'none', 'metadata', 'auto'  volume: 0.7       # default volume, notice that player will remember user setting, default volume will not work after user set volume themselves  listFolded: true  # indicate whether list should folded at first</code></pre><p>server值:netease（网易云音乐），tencent（QQM音乐），kugou（酷狗音乐），xiami</p><p>（小米音乐），baidu（百度音乐）<br>type值：song （歌曲），playlist（播放列表），album（专辑），search（搜索），artist（艺术家）<br>获取音乐<code>ID</code>：在浏览器打开网易云音乐，点击’我喜欢’的播放列表将出现一串数字<code>playlist's id</code>就是<code>ID</code>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo+Github搭建个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo+Github搭建个人博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Hexo+Github搭建个人博客（1）</title>
      <link href="2020/06/21/yong-hexo-github-da-jian-ge-ren-bo-ke/"/>
      <url>2020/06/21/yong-hexo-github-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<blockquote><p>详细说明Hexo+Github建站</p></blockquote><h2 id="0x00-缘由"><a href="#0x00-缘由" class="headerlink" title="0x00.  缘由"></a>0x00.  缘由</h2><p>之前的备份没了，部署不到<code>Github</code>上，没办法，只能重新来过了……</p><h2 id="0x01-安装Git"><a href="#0x01-安装Git" class="headerlink" title="0x01. 安装Git"></a>0x01. 安装Git</h2><p>为了将本地网页文件部署到github上，下载<code>Git</code><a href="https://git-scm.com/download" target="_blank" rel="noopener">下载地址</a>，最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>。</p><blockquote><p><code>windows</code>在<code>git</code>安装完后，就可以直接使用<code>git bash</code>来敲命令行了。</p></blockquote><h2 id="0x02-安装nodejs"><a href="#0x02-安装nodejs" class="headerlink" title="0x02. 安装nodejs"></a>0x02. 安装nodejs</h2><p><code>Node.js</code><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">下载地址</a>，安装选项全部默认，一路点击<code>Next</code>。<br>最后安装好之后，按Win+R输入cmd，打开命令提示符，输入<code>node -v</code>和<code>npm -v</code>，如果出现版本号，那么就安装成功了。</p><h2 id="0x03-安装Hexo"><a href="#0x03-安装Hexo" class="headerlink" title="0x03. 安装Hexo"></a>0x03. 安装Hexo</h2><p>先创建一个文件夹，用来建立博客，然后在文件夹中直接右键<code>git bash</code>打开git的控制窗口。<br><br>配置淘宝<code>NPM</code>镜像：<br></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-cli -ghexo init blog<span class="token function">cd</span> blogcnpm <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>node_modules</code>: 依赖包</li><li><code>public</code>：存放生成的页面</li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题文件</li><li><code>_config.yml</code>: 博客的配置文件</li></ul><p>输入<code>hexo g</code>生成静态页面，然后输入`hexo s’打开本地服务器，</p><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后用浏览器打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，就可以打开博客<br><br>按<code>ctrl+c</code>关闭本地服务器。</p><h2 id="0x04-注册Github账号创建个人仓库respositories"><a href="#0x04-注册Github账号创建个人仓库respositories" class="headerlink" title="0x04.注册Github账号创建个人仓库respositories"></a>0x04.注册Github账号创建个人仓库respositories</h2><p>打开<a href="http://github.com/" target="_blank" rel="noopener">http://github.com/</a>，新建一个仓库：<code>new responsitory</code><br><br><br>然后输入自己的项目名字，最后生成的项目地址为：<code>××××.github.io</code>,<code>README</code>初始化也需要勾上。</p><h2 id="0x05-生成SSH密钥添加到Github"><a href="#0x05-生成SSH密钥添加到Github" class="headerlink" title="0x05. 生成SSH密钥添加到Github"></a>0x05. 生成SSH密钥添加到Github</h2><p>右键打开<code>git bash</code>，输入以下命令</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"yourname"</span><span class="token function">git</span> config --global user.email <span class="token string">"youremail"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>yourname</code>为你的<code>Github</code>用户名。<br><br><code>youremail</code>为你的<code>Github</code>绑定的邮箱。<br><br>检查一下输入是否正确：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建<code>SSH</code>：</p><blockquote><p>ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在<code>GitHub</code>上，这样当你链接<code>GitHub</code>自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过<code>git</code>上传你的文件到<code>GitHub</code>上。</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>youremail为你Github绑定的邮箱。然后会显示.ssh文件夹所在的路径，或者<code>git bash</code>中输入：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将<code>id_rsa.pub</code>中的内容复制，打开<a href="https://github.com/" target="_blank" rel="noopener">Github</a>点击右上角头像的选项<code>setting</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便填，把<code>id_rsa.pub</code>中复制的内容贴上。<br><br>在<code>git bash</code>中输入<code>ssh -T git@github.com</code>，如果出现用户名，就成功绑定了SSH密钥。</p><h2 id="0x06-将hexo部署到Github"><a href="#0x06-将hexo部署到Github" class="headerlink" title="0x06 将hexo部署到Github"></a>0x06 将hexo部署到Github</h2><p>打开博客根目录<code>blog</code>下的<code>_config.yml</code>文件（博客的配置文件），<br>修改deploy的配置<strong><em>注意</em></strong>冒号后必须要有一个空格，否则报错。</p><pre><code>deploy:  type: git  repository: https://github.com/susuweb/susuweb.github.io  branch: master</code></pre><p><code>repository</code>修改为创建的项目仓库地址即可。<br><br>然后安装deploy-git</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>部署：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写。</p><br>进入http://yourname.github.io就可以看到你的博客了<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo+Github搭建个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo+Github搭建个人博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
